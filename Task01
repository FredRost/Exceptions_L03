import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class UserDataParser {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Введите данные в формате: Фамилия Имя Отчество датарождения номертелефона пол");

        while (scanner.hasNextLine()) {
            String input = scanner.nextLine();
            try {
                processInput(input);
            } catch (IllegalArgumentException e) {
                System.out.println("Ошибка: " + e.getMessage());
            }
        }
    }

    private static void processInput(String input) {
        String[] parts = input.split("\\s+");
        if (parts.length != 6) {
            throw new IllegalArgumentException("Недостаточно данных или слишком много данных");
        }

        String lastName = parts[0];
        String firstName = parts[1];
        String middleName = parts[2];
        String birthDate = parts[3];
        String phoneNumber = parts[4];
        String gender = parts[5];

        validateData(lastName, firstName, middleName, birthDate, phoneNumber, gender);

        String fileName = lastName + ".txt";
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName, true))) {
            String userData = lastName + firstName + middleName + birthDate + " " + phoneNumber + gender;
            writer.write(userData);
            writer.newLine();
            System.out.println("Данные успешно записаны в файл " + fileName);
        } catch (IOException e) {
            System.err.println("Ошибка при записи данных в файл: " + e.getMessage());
        }
    }

    private static void validateData(String lastName, String firstName, String middleName, String birthDate, String phoneNumber, String gender) {
        // Проверяем формат даты рождения
        Pattern datePattern = Pattern.compile("\\d{2}\\.\\d{2}\\.\\d{4}");
        Matcher dateMatcher = datePattern.matcher(birthDate);
        if (!dateMatcher.matches()) {
            throw new IllegalArgumentException("Неверный формат даты рождения");
        }

        // Проверяем, что номер телефона состоит только из цифр
        if (!phoneNumber.matches("\\d+")) {
            throw new IllegalArgumentException("Номер телефона должен содержать только цифры");
        }

        // Проверяем, что пол - один из символов 'f' или 'm'
        if (!gender.matches("[fm]")) {
            throw new IllegalArgumentException("Неверное значение пола");
        }
    }
}
